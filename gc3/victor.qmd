---
title: "Victor's GC3 Work"
format: html
---

```{r}
library(geoR)
library(dplyr)
library(conflicted)
library(here)
library(tidyverse)
library(scico)
library(sf)
library(rnaturalearth)
library(geoR)
library(spBayes)
library(coda)
library(ggspatial)
library(dplyr)

df <- read.csv("../data/model_data.csv")
df
```

```{r}
scaled_coords <- scale(df[, c("Lat", "Long", "dist_to_water")])
scaled_coord_df <- cbind.data.frame("AcousticSite" = df[, "AcousticSite"], scaled_coords)

```

```{r}

model_df <- df %>% dplyr::rename_with(~ gsub("_count", "", .x), ends_with("_count"))  %>% 
    reshape2::melt(
    id.vars = c("AcousticSite", "Year", "Lat", "Long", "dist_to_water", "water_size", "num_nights", "num_detectable_species"),
    variable.name="Species",
    value.name="count"
) %>% dplyr::filter(Species != "ALL" & count != 0) %>% 
    transform(avg_count = count / num_nights)

```

```{r}
model_df2 <- mutate(
    model_df, Long = scale(Long), water_size = scale(water_size)
)
```

```{r}
poisson_mod <- glm(
    count ~ Long + water_size + Species,
    poisson,
    model_df2,
    offset = log(model_df2$num_nights)
)
poisson_mod_fitted_vals_resids <- tibble(
    fitted_val = fitted(poisson_mod), resid = resid(poisson_mod)
)
```

Currently this results in the following error: `c++ Rf_error: dpotrf failed`. The values of `starting`, `tuning`, and `priors` are from my GC2 code, which fit a different model, so they probably need to be changed.
```{r}
poisson_mod_coefs <- coef(poisson_mod)
poisson_mod_resid_var <- var(resid(poisson_mod))
spatial_poisson_mod <- spGLM(
    count ~ Long + water_size + Species,
    family = "poisson",
    weights = model_df2$num_nights,
    data = model_df2,
    coords = as.matrix(model_df[, c("Lat", "dist_to_water")]),
    starting = list(
        beta = poisson_mod_coefs,
        sigma.sq = poisson_mod_resid_var,
        phi = 0.5,
        w = 0
    ),
    tuning = list(
        beta = 0.1 * abs(poisson_mod_coefs),
        sigma.sq = 0.1 * poisson_mod_resid_var,
        phi = 0.001,
        w = 0
    ),
    priors = list(
        sigma.sq.ig = c(2, 3 * poisson_mod_resid_var),
        phi.unif = c(0.1, 1),
        beta.normal = list(
            poisson_mod_coefs, 0.33 * sqrt(abs(poisson_mod_coefs))
        )
    ),
    cov.model = "exponential",
    n.samples = 5000,
    verbose = TRUE,
    n.report = 100
)
```
