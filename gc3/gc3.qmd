---
title: "matt_qc3"
format: html
---

# Matt's QC3

```{r}

here::i_am("gc3/gc3.qmd")

library(geoR)
library(dplyr)
library(conflicted)
library(here)
library(tidyverse)
library(scico)
library(sf)
library(rnaturalearth)
library(geoR)
library(spBayes)
library(coda)
library(ggspatial)
library(dplyr)
library(here)


df <- read.csv(here("./data/model_data.csv"))
df
```

```{r}
# sum counts by year
df <- df %>%
    group_by(AcousticSite, Lat, Long, dist_to_water, water_size) %>%
    summarise(
        across(ends_with("_count"), sum, na.rm = TRUE),
        num_nights = sum(num_nights, na.rm = TRUE),
    ) %>%
    ungroup()

df
```


```{r}

model_df <- df %>% dplyr::rename_with(~ gsub("_count", "", .x), ends_with("_count"))  %>% 
    reshape2::melt(
    id.vars = c("AcousticSite", "Lat", "Long", "dist_to_water", "water_size", "num_nights"),
    variable.name="Species",
    value.name="count"
) %>% dplyr::filter(Species != "ALL" & count != 0) %>%
# ) %>% dplyr::filter(Species %in% c("EPTFUS", "LASNOC", "PERSUB") & count != 0) %>%
    transform(avg_count = count / num_nights)

model_df
```

```{r}

summary(lm(avg_count ~ Lat + Long + dist_to_water + Species, model_df))

```

```{r, fig.height=7, fig.width=10}

mainmap <- ne_states(country = c("united states of america"), returnclass = "sf")
michiganplus <- mainmap %>% dplyr::filter(name %in% c("Illinois", "Michigan", "Wisconsin", "Ontario", "Ohio", "Indiana", "Pennsylvania", "New York", "West Virginia", "Minnesota", "Iowa", "Texas", "Kansas", "Oklahoma", "Nebraska", "Missouri"))

ggplot(data=model_df[model_df$Species %in% c("EPTFUS", "LASNOC", "PERSUB"),]) +
    geom_sf(data = michiganplus) + 
    facet_wrap(~ Species, ncol=3) + 
    geom_point(aes(x=Long, y=Lat, color=log(count)), size=2.0) +
    theme_minimal() +
    theme(legend.position = "right", axis.text.x=element_text(angle=45)) +
    guides(color = guide_colorbar(title="Log Detections")) +
    # geom_jitter(data=sightings_df, size = 1.5, aes(x = Long, y = Lat, color = log1p(count))) +
    # coord_sf(ylim = c(25, 49), xlim = c(-75, -107)) +
    # scale_color_viridis_c(name = "Log Counts", option = "B") +
    ggtitle("Log Detections by Species")
```
```{r, fig.width=12, fig.height=8}


species_text <- unique(model_df$Species)

variograms <- lapply(species_text, function(species_val) {
    species_df <- model_df[model_df$Species == species_val,]
    vario <- variog(data=species_df$avg_count, coords = species_df[, c("Lat", "Long")])
    cbind.data.frame("species"=species_val, data.frame(vario[c("u", "v", "sd")]))
})

vario_plot <- do.call(rbind, variograms)

ggplot(data = vario_plot, aes(x=u, y=v)) +
    geom_line() +
    facet_wrap(~ species, scales="free") +
    labs(x = "Distance", y = "Semivariance") +
    # geom_errorbar(aes(ymin = v - 2*sd, ymax = v + 2*sd), width = 0.1) +
    scale_y_log10() +
    theme_minimal() +
    ggtitle("Empirical Semivariogram by Species") +
    labs(y = "Average Count")
```

```{r}
colnames(df)
```

```{r}

original_df <- model_df
model_df <- model_df |> dplyr::filter(Species %in% c("EPTFUS", "LASNOC", "PERSUB")) |> 
    dplyr::mutate(Species = factor(Species)) |>
    dplyr::mutate(across(c(dist_to_water, Lat, Long), scale)) 
coords <- as.matrix(model_df[, c("Lat", "Long")])
coords <- coords + rnorm(nrow(coords) * 2, mean = 0, sd = 0.01) # add a little noise to avoid singularity in the covariance matrix
covars <- cbind.data.frame(
    "count"=model_df$count,
    "avg_count"=model_df$count/model_df$num_nights,
    "dist_to_water"=model_df$dist_to_water,
    "species"=model_df$Species
)
covars
```


```{r}
# n.samples <- 10000
starting <- list(
    "phi" = 4,
    "sigma.sq" = 5,  
    "tau.sq" = 5,  
    "w" = rep(0, nrow(coords)),  # No spatial effect at start
    "nu" = 2.5
)



tuning <- list(
    "phi" = 0.05,  
    "sigma.sq" = 0.05,
    "tau.sq" = 0.05,
    "beta" = rep(0.05, 4),  # Even smaller for regression coefficients
    "w"=0.05,
    "nu" = 0.05
)


priors <- list(
    "beta.Norm" = list(rep(0, 4), diag(2, 4)),  # Less strict on betas
    "phi.Unif" = c(0.1, 25),   # Avoid extreme spatial correlation
    "nu.Unif" = c(0.5, 2.5),
    "sigma.sq.IG" = c(2, 1),  # More reasonable inverse gamma
    "tau.sq.IG" = c(2, 1)
)


cov.model <- "exponential"

spatial_lm <- spBayes::spLM(
    formula = log(avg_count) ~ 1 + dist_to_water + species,
    # family = "poisson",
    amcmc = list(n.batch = 500, batch.length = 25, accept.rate = 0.25),
    data = covars,
    coords = coords,
    starting = starting,
    cov.model = cov.model,
    n.samples = n.samples,
    tuning = tuning,
    priors = priors,
    verbose = TRUE
)


```

```{r}
samples <- spRecover(spatial_lm, start = 10000)
```

```{r, fig.width=8, fig.height=6}
plot(samples$p.theta.recover.samples)
```

```{r}
head(samples$p.beta.recover.samples)
```

```{r}
plot(samples$p.beta.recover.samples[, c(2:3)])

```

```{r}
spDiag(samples)
```

```{r}
# Get posterior predictive mean
posterior_preds <- samples$p.beta.recover.samples %*% t(samples$X)  # All posterior predictions
posterior_var <- apply(posterior_preds, 2, var)  # Variance of residuals
posterior_mean <- apply(posterior_preds, 2, mean)  # Variance of residuals


residual_plot_data <- cbind.data.frame(
    'var'=posterior_var,
    'mean'=posterior_mean,
    'true'=samples$Y,
    'lat'=coords[, 1],
    'long'=coords[, 2],
    'species'=model_df$Species,
    'resid' = samples$Y - posterior_mean,
    'spatial_effect' = apply(samples$p.w.recover.samples, 1, mean)
)
residual_plot_data <- residual_plot_data[order(residual_plot_data$mean),]
residual_plot_data$idx <- seq(1, nrow(residual_plot_data))


plot(
    variog(data=residual_plot_data$resid, coords = cbind(residual_plot_data$lat, residual_plot_data$long), uvec=10),
    main="Residual Variogram"
)


```

```{r}
library(spdep)
nb <- knn2nb(knearneigh(coords, k = 4))  # Define neighbors
listw <- nb2listw(nb, style = "W")  # Create spatial weights
moran.test(residual_plot_data$resid, listw)  # Run Moran's I test
```

```{r}
ggplot(data=residual_plot_data, aes(x=resid, fill=species)) + 
    geom_density(alpha=0.5) + 
    scale_fill_viridis_d() +
    labs(
        title="Residual Density by Species",
        x="Residuals",
        y="Density"
    ) 
```


```{r}
residual_plot_data$old_Lat <- model_df$Lat*attr(model_df$Lat, "scaled:scale") + attr(model_df$Lat, "scaled:center")
residual_plot_data$old_Long <- model_df$Long*attr(model_df$Long, "scaled:scale") + attr(model_df$Long, "scaled:center")

ggplot(data=residual_plot_data) +
    geom_sf(data = michiganplus) + 
    # facet_wrap(~ Species, ncol=3) +
    geom_tile(aes(x=old_Long, y=old_Lat, fill=spatial_effect), width=0.25, height=0.25) +
    theme_minimal() +
    theme(legend.position = "right", axis.text.x=element_text(angle=45), axis.title = element_blank()) +
    coord_sf(ylim = c(40, 49), xlim = c(-75, -100)) +
    scale_color_viridis_c(name = "Log Counts", option = "B") +
    ggtitle("Estimated Spatial Effects")
```


```{r full_grid_effects}
full_grid <- read.csv("../data/data/prediction_grid.csv")

# scale the full grid data
full_grid$water_dist <- scale(
    full_grid$water_dist, 
    center = water_center, 
    scale = water_scale
)

centers <- c(
    attr(model_df[, "Lat"], "scaled:center"),
    attr(model_df[, "Long"], "scaled:center"),
    attr(model_df[, "dist_to_water"], "scaled:center")
)

scales <- c(
    attr(model_df[, "Lat"], "scaled:scale"),
    attr(model_df[, "Long"], "scaled:scale"),
    attr(model_df[, "dist_to_water"], "scaled:scale")
)


scaled_grid <- scale(
    full_grid[, c("lat", "lon", "water_dist")],
    centers,
    scales
)

pred.covars <- cbind('intercept' = 1, dist_to_water=scaled_grid[, "water_dist"], "LASNOC"=0, "PERSUB"=1)
grid_predictions <- spPredict(
    spatial_lm,
    pred.covars = pred.covars,
    pred.coords = scaled_grid[, c("lat", "lon")],
    n.omp.threads = 8,
    start = 11501,
    end=12000
)
persub_preds <- rowMeans(grid_predictions$p.y.predictive.samples)

pred.covars <- cbind('intercept' = 1, dist_to_water=scaled_grid[, "water_dist"], "LASNOC"=0, "PERSUB"=0)
eptfus_preds <- spPredict(
    spatial_lm,
    pred.covars = pred.covars,
    pred.coords = scaled_grid[, c("lat", "lon")],
    n.omp.threads = 8,
    start = 11501,
    end=12000
)
eptfus_hat <- rowMeans(eptfus_preds$p.y.predictive.samples)

pred.covars <- cbind('intercept' = 1, dist_to_water=scaled_grid[, "water_dist"], "LASNOC"=1, "PERSUB"=0)
lasnoc_preds <- spPredict(
    spatial_lm,
    pred.covars = pred.covars,
    pred.coords = scaled_grid[, c("lat", "lon")],
    n.omp.threads = 8,
    start = 11501,
    end=12000
)
lasnoc_hat <- rowMeans(lasnoc_preds$p.y.predictive.samples)

```




```{r, fig.height=5, fig.width=16}
raw_lat <- scaled_grid[, "lat"] * scales[1] + centers[1]
raw_lon <- scaled_grid[, "lon"] * scales[2] + centers[2]

plot_data <- rbind(
    cbind.data.frame("lat"=raw_lat, "lon"=raw_lon, species="EPTFUS", "y_hat"=eptfus_hat),
    cbind.data.frame("lat"=raw_lat, "lon"=raw_lon, species="PERSUB", "y_hat"=persub_preds),
    cbind.data.frame("lat"=raw_lat, "lon"=raw_lon, species="LASNOC", "y_hat"=lasnoc_hat)
)

# plot_data
ggplot(data=plot_data) +
    facet_wrap(~ species, ncol=3) +
    geom_tile(aes(x=lon, y=lat, fill=y_hat)) +
    theme(legend.position = "bottom", axis.title=element_blank()) +
    coord_sf(ylim = c(25, 49), xlim = c(-70, -105)) +
    scale_fill_viridis_c() +
    ggtitle("Log Detections / Night") +
    geom_sf(data = michiganplus, alpha=0.1) 

```
