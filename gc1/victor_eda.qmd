---
title: "Victor's EDA"
format:
    html:
        embed-resources: true
        toc: true
        number-sections: true
---

```{r}
#| label: "setup"
#| message: FALSE

here::i_am("gc1/victor_eda.qmd")

library(conflicted)
library(here)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(tidyverse)
conflicts_prefer(dplyr::filter, dplyr::lag)

load(here("data/processed/data_metadata.RData"))

theme_set(theme_bw())
```

# The Relationship between `AcousticSite` and `NightOf`

In `data`, there's one record for each pair of `AcousticSite` and
`NightOf`.
```{r}
data %>%
    count(AcousticSite, NightOf, name = "num_recs") %>%
    filter(num_recs > 1)
```

The number of nights with data can vary a lot across sites.
```{r}
data %>%
    group_by(AcousticSite) %>%
    summarize(num_nights = length(NightOf)) %>%
    ggplot(aes(num_nights)) +
    geom_histogram(binwidth = 10, colour = "black", fill = "white") +
    labs(x = "Number of Nights with Data", y = "Number of Sites")
```

We next count sites by night.
```{r}
site_counts_by_night <- data %>%
    group_by(NightOf) %>%
    summarize(num_sites = length(AcousticSite))
```

We compute the difference in days between nights that are listed consecutively; the table below shows that the difference is one day for most, but not all, pairs of consecutive nights. In other words, there are gaps in the sequence of nights.
```{r}
site_counts_by_night %>% pull(NightOf) %>% diff() %>% table()
```

To fill in the gaps, we insert records whose site counts are zero.
```{r}
site_counts_by_night <- complete(
    site_counts_by_night,
    NightOf = full_seq(NightOf, period = 86400),
    fill = list(num_sites = 0)
)
```

The line plot below shows that the gaps largely start at the end of one year and stretch into the beginning of the next year. However, there are dips in the site count in the middle of each year, and some of these dips reach zero. Another finding from this plot is that many more sites produced data in the early 2010s than later in the decade.
```{r}
site_counts_by_night %>%
    ggplot(aes(NightOf, num_sites)) +
    geom_line() +
    labs(x = "Night", y = "Number of Sites with Data")
```

# The Count Columns

```{r}
count_cols <- setdiff(names(data), c("AcousticSite", "NightOf"))
```

There are no missing values in the count columns.
```{r}
data %>%
    summarize(
        across(all_of(count_cols), ~ sum(is.na(.x)), .names = "{.col}_num_nas")
    ) %>%
    keep(~ .x > 0)
```

All values in the count columns are integers.
```{r}
data %>%
    summarize(
        across(
            all_of(count_cols),
            ~ sum(!near(.x, floor(.x))),
            .names = "{.col}_num_non_integers"
        )
    ) %>%
    keep(~ .x > 0)
```

All values in the count columns are nonnegative.
```{r}
data %>%
    summarize(
        across(
            all_of(count_cols), ~ sum(.x < 0), .names = "{.col}_num_neg_vals"
        )
    ) %>%
    keep(~ .x > 0)
```

For some species, there are no nonzero counts.
```{r}
zero_count_cols <- data %>%
    summarize(across(all_of(count_cols), ~ any(.x > 0))) %>%
    discard(isTRUE) %>%
    names()
zero_count_cols
```

We exclude the species with no nonzero counts.
```{r}
count_cols <- setdiff(count_cols, zero_count_cols)
```


This will come in handy in a few places.
```{r}
non_ALL_count_cols <- setdiff(count_cols, "ALL")
```

For many records, the `ALL` count doesn't equal the sum of the non-`ALL` counts.
```{r}
ALL_vals <- data$ALL
non_ALL_sums <- data %>% select(all_of(non_ALL_count_cols)) %>% rowSums()
table(near(ALL_vals, non_ALL_sums))
```

Based on the plot below, when the the `ALL` count doesn't equal the non-`ALL`
sum, it's larger; sometimes it's substantially larger.
```{r}
ggplot(
    tibble(ALL_val = ALL_vals, non_ALL_sum = non_ALL_sums),
    aes(ALL_val, non_ALL_sum)
) +
    geom_point(alpha = 0.3) +
    geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(x = "ALL Value", y = "Non-ALL Sum") +
    theme_bw()
```

# Normalized Count Maps

The following objects contain information on state, province, and lake boundaries and will be used when making maps.
```{r}
#| output: FALSE

great_lakes_states <- ne_states(
    country = "United States of America", returnclass = "sf"
) %>%
    filter(
        name %in% c(
            "Minnesota", "Wisconsin", "Illinois", "Indiana", "Michigan", "Ohio",
            "Pennsylvania", "New York"
        )
    )
ontario <- ne_states(country = "Canada", returnclass = "sf") %>%
    filter(name == "Ontario")
great_lakes <- ne_download(
    scale = 50, type = "lakes", category = "physical", returnclass = "sf"
) %>%
    filter(
        name %in% c(
            "Lake Superior", "Lake Michigan", "Lake Huron", "Lake Erie",
            "Lake Ontario"
        )
    )
```

For each site, we compute the number of nights with data, and for each species, we compute the number of detections per night.
```{r}
#| message: FALSE

data_rollup <- data %>%
    group_by(AcousticSite) %>%
    summarize(
        num_nights = length(NightOf), across(all_of(count_cols) & !ALL, sum)
    ) %>%
    rowwise(AcousticSite, num_nights) %>%
    summarize(across(all_of(non_ALL_count_cols), ~ .x / num_nights)) %>%
    ungroup() %>%
    inner_join(
        select(metadata, AcousticSite, Long, Lat), by = "AcousticSite"
    ) %>%
    relocate(Long, Lat, .after = AcousticSite)
```

The sites with the largest number of nights with data are largely along Minnesota's border with Lake Michigan.
```{r}
ggplot() +
    geom_sf(data = great_lakes_states, color = "black", fill = "white") +
    geom_sf(data = ontario, color = "black", fill = "white") +
    geom_sf(data = great_lakes, color = "lightblue", fill = "lightblue") +
    geom_point(aes(Long, Lat, color = num_nights), data_rollup) +
    scale_color_gradient(low = "blue", high = "red") +
    coord_sf(xlim = c(-92, -76), ylim = c(41, 49)) +
    labs(
        x = "Longitude", y = "Latitude", color = "Number of Nights",
        title = "Site Locations"
    ) +
    theme_minimal() +
    theme(legend.position = "top", plot.title = element_text(hjust = 0.5))
```

For each species, we will use the function below to make a map showing how the number of detections per night varies across sites.
```{r}
make_map <- function(count_col) {
    ggplot() +
        geom_sf(data = great_lakes_states, color = "black", fill = "white") +
        geom_sf(data = ontario, color = "black", fill = "white") +
        geom_sf(data = great_lakes, color = "lightblue", fill = "lightblue") +
        geom_point(aes(Long, Lat, color = !!as.name(count_col)), data_rollup) +
        scale_color_gradient(low = "blue", high = "red") +
        coord_sf(xlim = c(-92, -76), ylim = c(41, 49)) +
        labs(
            x = "Longitude", y = "Latitude",
            color = str_glue("{count_col} Detections/Night"),
            title = "Site Locations"
        ) +
        theme_minimal() +
        theme(legend.position = "top", plot.title = element_text(hjust = 0.5))    
}
```

Some species are more dispersed geographically than others. Also, some species are more abundant than others.
```{r}
for (count_col in non_ALL_count_cols) {
    print(make_map(count_col))
}
```

